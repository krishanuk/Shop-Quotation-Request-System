//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TechFix.localhostQuotationManagement {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QuotationManagementServiceSoap", Namespace="http://tempuri.org/")]
    public partial class QuotationManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuotationDetailsWithProductNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllQuotationsForSupplierOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public QuotationManagementService() {
            this.Url = global::TechFix.Properties.Settings.Default.TechFix_localhostQuotationManagement_QuotationManagementService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddQuotationCompletedEventHandler AddQuotationCompleted;
        
        /// <remarks/>
        public event GetQuotationDetailsWithProductNamesCompletedEventHandler GetQuotationDetailsWithProductNamesCompleted;
        
        /// <remarks/>
        public event DeleteQuotationCompletedEventHandler DeleteQuotationCompleted;
        
        /// <remarks/>
        public event DeleteAllQuotationsForSupplierCompletedEventHandler DeleteAllQuotationsForSupplierCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddQuotation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddQuotation(int requestedByUserID, string supplierType, int productID, int quantity, decimal quotedPrice) {
            object[] results = this.Invoke("AddQuotation", new object[] {
                        requestedByUserID,
                        supplierType,
                        productID,
                        quantity,
                        quotedPrice});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddQuotationAsync(int requestedByUserID, string supplierType, int productID, int quantity, decimal quotedPrice) {
            this.AddQuotationAsync(requestedByUserID, supplierType, productID, quantity, quotedPrice, null);
        }
        
        /// <remarks/>
        public void AddQuotationAsync(int requestedByUserID, string supplierType, int productID, int quantity, decimal quotedPrice, object userState) {
            if ((this.AddQuotationOperationCompleted == null)) {
                this.AddQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQuotationOperationCompleted);
            }
            this.InvokeAsync("AddQuotation", new object[] {
                        requestedByUserID,
                        supplierType,
                        productID,
                        quantity,
                        quotedPrice}, this.AddQuotationOperationCompleted, userState);
        }
        
        private void OnAddQuotationOperationCompleted(object arg) {
            if ((this.AddQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQuotationCompleted(this, new AddQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQuotationDetailsWithProductNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQuotationDetailsWithProductNames(string supplierType) {
            object[] results = this.Invoke("GetQuotationDetailsWithProductNames", new object[] {
                        supplierType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuotationDetailsWithProductNamesAsync(string supplierType) {
            this.GetQuotationDetailsWithProductNamesAsync(supplierType, null);
        }
        
        /// <remarks/>
        public void GetQuotationDetailsWithProductNamesAsync(string supplierType, object userState) {
            if ((this.GetQuotationDetailsWithProductNamesOperationCompleted == null)) {
                this.GetQuotationDetailsWithProductNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuotationDetailsWithProductNamesOperationCompleted);
            }
            this.InvokeAsync("GetQuotationDetailsWithProductNames", new object[] {
                        supplierType}, this.GetQuotationDetailsWithProductNamesOperationCompleted, userState);
        }
        
        private void OnGetQuotationDetailsWithProductNamesOperationCompleted(object arg) {
            if ((this.GetQuotationDetailsWithProductNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuotationDetailsWithProductNamesCompleted(this, new GetQuotationDetailsWithProductNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteQuotation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteQuotation(int quotationRequestID, string supplierType) {
            object[] results = this.Invoke("DeleteQuotation", new object[] {
                        quotationRequestID,
                        supplierType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteQuotationAsync(int quotationRequestID, string supplierType) {
            this.DeleteQuotationAsync(quotationRequestID, supplierType, null);
        }
        
        /// <remarks/>
        public void DeleteQuotationAsync(int quotationRequestID, string supplierType, object userState) {
            if ((this.DeleteQuotationOperationCompleted == null)) {
                this.DeleteQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteQuotationOperationCompleted);
            }
            this.InvokeAsync("DeleteQuotation", new object[] {
                        quotationRequestID,
                        supplierType}, this.DeleteQuotationOperationCompleted, userState);
        }
        
        private void OnDeleteQuotationOperationCompleted(object arg) {
            if ((this.DeleteQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteQuotationCompleted(this, new DeleteQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAllQuotationsForSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteAllQuotationsForSupplier(string supplierType) {
            object[] results = this.Invoke("DeleteAllQuotationsForSupplier", new object[] {
                        supplierType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllQuotationsForSupplierAsync(string supplierType) {
            this.DeleteAllQuotationsForSupplierAsync(supplierType, null);
        }
        
        /// <remarks/>
        public void DeleteAllQuotationsForSupplierAsync(string supplierType, object userState) {
            if ((this.DeleteAllQuotationsForSupplierOperationCompleted == null)) {
                this.DeleteAllQuotationsForSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllQuotationsForSupplierOperationCompleted);
            }
            this.InvokeAsync("DeleteAllQuotationsForSupplier", new object[] {
                        supplierType}, this.DeleteAllQuotationsForSupplierOperationCompleted, userState);
        }
        
        private void OnDeleteAllQuotationsForSupplierOperationCompleted(object arg) {
            if ((this.DeleteAllQuotationsForSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllQuotationsForSupplierCompleted(this, new DeleteAllQuotationsForSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddQuotationCompletedEventHandler(object sender, AddQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetQuotationDetailsWithProductNamesCompletedEventHandler(object sender, GetQuotationDetailsWithProductNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuotationDetailsWithProductNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuotationDetailsWithProductNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteQuotationCompletedEventHandler(object sender, DeleteQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteAllQuotationsForSupplierCompletedEventHandler(object sender, DeleteAllQuotationsForSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllQuotationsForSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllQuotationsForSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591